# Workflow name
name: Chromatic Deployment and NPM Publish

# Event for the workflow
on:
  pull_request:
    branches: [ main ]
  push: 
    branches: [ main ]

# List of jobs
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Instala las dependencias antes de la construcción
      - name: Install dependencies
        run: npm install

  validate-commit:
    name: Validate Commit Message
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20.8.1

      - name: Install dependencies
        run: npm install

      - name: Validate commit messages
        run: |
          last_commit_message=$(git log -1 --pretty=format:%s)
          if [[ ! "$last_commit_message" =~ ^(fix:|feat:) ]]; then
            echo "Error: El mensaje de confirmación no cumple con el formato esperado (fix: o feat:)"
            exit 1
          fi
        working-directory: ${{ github.workspace }}

  chromatic:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install dependencies
        run: |
          npm ci && npm install && yarn install --immutable --immutable-cache --check-cache

      - name: Publish to Chromatic
        uses: chromaui/action@latest
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          
    publish:
        runs-on: ubuntu-latest
        if: ${{ github.ref == 'refs/heads/main' }}
        needs: [quality]
        steps: 
        - uses: actions/checkout@v2
        - name: Use Node.js ${{ matrix.node-version }}
          uses: actions/setup-node@v2
          with:
            node-version: ${{ matrix.node-version }}
        - run: npm ci
        - run: npm run semantic-release
          env: 
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}